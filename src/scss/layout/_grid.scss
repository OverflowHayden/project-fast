@use 'sass:math';
@use '../setup/variables';

// pixels to % variables
$desk-grid-width: 100% - math.div(variables.$grid-desktop-sideMargin * 2, variables.$grid-desktop-breakpoint) * 100%;
$tab-grid-width: 100% - math.div(variables.$grid-tablet-sideMargin * 2, variables.$grid-tablet-breakpoint) * 100%;
$mob-grid-width: 100% - math.div(variables.$grid-mobile-sideMargin * 2, variables.$grid-mobile-breakpoint) * 100%;

$desk-gutter: (
        (
        math.div(variables.$grid-desktop-gutter, (variables.$grid-desktop-breakpoint - (variables.$grid-desktop-sideMargin * 2))
    )) * 100%
);
$tab-gutter: (
        (
        math.div(variables.$grid-tablet-gutter, (variables.$grid-tablet-breakpoint - (variables.$grid-tablet-sideMargin * 2))
    )) * 100%
);
$mob-gutter: (
        (
        math.div(variables.$grid-mobile-gutter, (variables.$grid-mobile-breakpoint - (variables.$grid-mobile-sideMargin * 2))
    )) * 100%
);

// FUNCTIONS AND MiXINS
@function col-width($i, $columns, $gutter) {
    @return math.div(100%, $columns) * $i - $gutter;
}

@mixin col-props($i, $columns, $gutter) {
    box-sizing: border-box;
    width: col-width($i, $columns, $gutter);
    margin-left: math.div($gutter, 2);
    margin-right: math.div($gutter, 2);
}

@mixin columns-loop($name, $columns, $gutter) {
    @for $i from 0 through $columns {
        &-#{$name}-#{$i} {
            @include col-props($i, $columns, $gutter);
        }
        &-#{$name}-shift-#{$i} {
            margin-left: col-width($i, $columns, $gutter);
        }
    }
}

@mixin grid-base($width) {
    box-sizing: border-box;
    display: flex;
    flex-wrap: wrap;
    margin: 0 -#{math.div($desk-gutter, 2)};
    //max-width: variables.$grid-desktop-breakpoint;
    //width: $width;

    @media screen and (max-width: variables.$grid-tablet-breakpoint) {
        margin: 0 -#{math.div($tab-gutter, 2)};
    }
    @media screen and (max-width: variables.$grid-mobile-breakpoint) {
        margin: 0 -#{math.div($mob-gutter, 2)};
    }
}

.grid {
    @include grid-base($desk-grid-width);

    &-0 {
        @include grid-base(100%);
    }

    &--visual [class^="col"] {
        background: variables.$color-base-white;
        border-radius: .2rem;
        padding: .6rem;
        margin-bottom: 3rem;
    }
}

.col {
    @include columns-loop(desk, variables.$grid-desktop-columns, $desk-gutter);
    @media screen and (max-width: variables.$grid-tablet-breakpoint) {
        @include columns-loop(tab, variables.$grid-tablet-columns, $tab-gutter);
    }
    @media screen and (max-width: variables.$grid-mobile-breakpoint) {
        @include columns-loop(mob, variables.$grid-mobile-columns, $mob-gutter);
    }
}