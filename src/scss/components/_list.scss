@use 'sass:map';
@use '../setup/variables';
@use '../setup/mixins';
@use '../components/drawer';

$list: (
        "background": variables.$color-base-white,
        "border": variables.$color-border-light,
        "color": rgba(variables.$color-base-black, .87),
        "font-size": 1.6rem,
        "height": 4.8rem,
        "padding": 1.5rem 1.6rem,
        "compact": (
                "font-size": 1.4rem,
                "height": 3.6rem,
        ),
        "secondary": (
                "color": rgba(variables.$color-base-black, .54),
                "font-size": 1.4rem,
        ),
        "graphic": (
                "color": rgba(variables.$color-base-black, .38),
                "font-size": 2.4rem,
                "size": 2.4rem,
        ),
        "meta": (
                "color": rgba(variables.$color-base-black, .38),
                "font-size": 2.4rem,
        ),
        "divider": rgba(variables.$color-base-black, .12),
) !default;

@mixin list {
    $self: &;
    background: map.get($list, "background");
    display: block;
    list-style: none;
    margin: 0 0 3rem 0;
    padding: 0;

    .menu a {
        color: variables.$color-text;
    }

    &--demo {
        @include mixins.box-shadow;
        border-radius: variables.$border-radius;
        max-width: 60rem;
    }

    &--striped {
        #{$self}__item {
            border-bottom: 1px solid map.get($list, "border");
            overflow: visible;

            &:last-child {
                border-bottom: none;
            }
        }

        #{$self}__item-meta {
            display: flex;
        }
    }

    &--compact {
        margin-bottom: 0;

        #{$self}__item {
            font-size: map.get($list, "compact", "font-size");
            min-height: map.get($list, "compact", "height");
        }
    }

    &__item {
        font-size: map.get($list, "font-size");
        font-weight: 400;
        display: flex;
        flex-wrap: wrap;
        color: map.get($list, "color");
        min-height: map.get($list, "height");
        align-items: center;
        overflow: hidden;
        padding: 0;
        position: relative;

        > #{$self} {
            padding: 0;
            margin: 0;
            width: 100%;

            #{$self}__item-text {
                padding-left: 2em;
            }

            .drawer & {
                display: none;
                overflow: hidden;
            }

            .drawer & #{$self}__item-text {
                padding-left: 4em;
            }
        }

        .drawer &#{$self}--open {
            border-top: .1rem solid map.get(drawer.$drawer, "border");
            border-bottom: .1rem solid map.get(drawer.$drawer, "border");

            #{$self}__item-meta path {
                transform: rotate(180deg);
            }

            #{$self} {
                display: block;
            }
        }

        & a#{$self}__item-text {
            @include mixins.ripple;
        }

        &-text {
            display: inline-flex;
            color: inherit;
            flex-wrap: wrap;
            align-items: center;
            width: 100%;
            height: 100%;
            padding: map.get($list, "padding");
            position: relative;
            text-overflow: ellipsis;
            white-space: nowrap;
            overflow: hidden;
            transition: background .25s ease;
            z-index: 1;

            &:hover {
                color: inherit;

                &:before {
                    background: rgba(variables.$color-base-black, .04);
                    border-radius: #{variables.$border-radius * .66};
                    content: "";
                    display: block;
                    position: absolute;
                    top: .4em;
                    right: .4em;
                    bottom: .4em;
                    left: .4em;
                    z-index: -1;
                }
            }

            &:active, &:focus {
                &:before {
                    background: rgba(variables.$color-base-black, .12);
                    border-radius: #{variables.$border-radius * .66};
                    content: "";
                    display: block;
                    position: absolute;
                    top: .4em;
                    right: .4em;
                    bottom: .4em;
                    left: .4em;
                    z-index: -1;
                }
            }
        }

        &--active &-text {
            background: rgba(variables.$color-base-black, .04);
            color: inherit;
        }

        &--header {
            padding: 12px 16px 6px;
            min-height: 38px;
        }

        &-secondary-text {
            color: map.get($list, "secondary", "color");
            font-size: map.get($list, "secondary", "font-size");
            font-weight: 400;
            letter-spacing: .01785em;
            line-height: 1.4;
            display: block;
            text-overflow: ellipsis;
            white-space: nowrap;
            overflow: hidden;
            width: 100%;
        }

        &-graphic {
            color: map.get($list, "graphic", "color");
            font-size: map.get($list, "graphic", "font-size");
            display: inline-flex;
            flex-shrink: 0;
            align-items: center;
            justify-content: center;
            height: map.get($list, "graphic", "size");
            width: map.get($list, "graphic", "size");
            margin: 0 .66em 0 0;
        }

        &-meta {
            margin-left: auto;
            margin-right: 0;
            color: map.get($list, "meta", "color");
            font-size: map.get($list, "meta", "font-size");
            cursor: pointer;

            path {
                transition: transform .4s ease;
                transform-origin: center;
            }
        }
    }

    &__divider {
        border: none;
        border-bottom: .1rem solid map.get($list, "divider");
        height: 0;
        margin: 0;
    }
}

.list {
    @include list;
}