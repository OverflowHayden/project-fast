@use 'sass:map';
@use '../setup/variables';
@use '../setup/mixins';

.drawer {
    @include mixins.box-shadow;
    $self: &;
    background: map.get(variables.$drawer, "background");
    color: map.get(variables.$drawer, "color");
    width: map.get(variables.$drawer, "width");

    &-scroll-lock {
        overflow: hidden;
    }

    &--temporary, &--persistent {
        background: transparent;
        position: fixed;
        top: 0;
        left: 0;
        width: calc(100% - 6.4rem);
        max-width: map.get(variables.$drawer, "width");
        height: 100%;
        transform: translateX(-100%);
        will-change: transform;
        z-index: 21;

        #{$self}__drawer {
            width: 100%;
        }

        #{$self}__label {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 1.6rem;
            right: -1.6rem;
        }

        #{$self}__antiSelect {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            visibility: hidden;
            z-index: 22;
        }

        #{$self}__nav-toggle {
            transform: translateX(100%);
        }

        ~ .main .app-bar {
            padding-left: calc(1.2rem + #{map.get(variables.$app-bar, "height")});
        }
    }

    &--persistent {
        transition: transform .2s ease, opacity 0s ease .2s;

        #{$self}__drawer {
            box-shadow: none;
        }

        &#{$self}--open {
            opacity: 1;
            transform: translateX(0);
            transition: transform .25s ease;
            will-change: transform;
        }
    }

    &--permanent {
        background: transparent;
        position: fixed;
        top: 0;
        left: 0;
        width: calc(100% - 6.4rem);
        max-width: map.get(variables.$drawer, "width");
        height: 100%;
        opacity: 1;
        transform: translateX(0);
        z-index: 21;

        #{$self}__drawer {
            width: 100%;
        }

        + .main {
            margin-left: map.get(variables.$drawer, "width");

            .app-bar {
                left: map.get(variables.$drawer, "width");
            }
        }
    }

    &--compact {
        max-width: map.get(variables.$drawer, "compact", "width");

        .list__item-text {
            text-indent: -999em;
            display: block;
        }

        .list__item-graphic {
            float: right;
            margin: 0 .33em;
        }

        .list__item--header, .drawer__header-text {
            display: none;
        }
    }

    &--open &__nav-toggle {
        transform: translateX(0);
        transition: transform .25s ease 0s;

        .iconify {
            &:first-of-type {
                display: none;
            }

            &:last-of-type {
                display: inline-block;
            }
        }
    }

    &--open .main .app-bar {
        padding-left: 1.2rem;
    }

    &__bg {
        position: fixed;
        background: rgba(variables.$color-base-black, .5);
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        height: 100%;
        z-index: 20;
        opacity: 0.001;
        transform: translateZ(0);
        visibility: hidden;
    }

    &__noselect {
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    &__drawer {
        background: map.get(variables.$drawer, "background");
        height: 100%;

        &#{$self}--dark {
            background: map.get(variables.$drawer, "dark", "background");
            color: map.get(variables.$drawer, "dark", "color");

            .list__item, .list__item-graphic, .list__item-meta, .list__item-header, .list__item-secondary-text {
                color: map.get(variables.$drawer, "dark", "color");
            }

            #{$self}__content {
                @include mixins.scrollbar(map.get(variables.$drawer, "dark", "background"));
            }
        }
    }

    &__nav-toggle {
        appearance: none;
        background: #{map.get(variables.$drawer, "header", "background")};
        border: none;
        color: map.get(variables.$drawer, "header", "color");
        cursor: pointer;
        width: map.get(variables.$app-bar, "height");
        height: map.get(variables.$app-bar, "height");
        position: absolute;
        right: 0;
        transition: transform .25s ease .4s;

        &:focus {
            outline: none;
        }

        &:hover {
            background: darken(map.get(variables.$drawer, "header", "background"), 5%);
        }

        .iconify {
            font-size: 2.8rem;

            &:first-of-type {
                display: inline-block;
            }

            &:last-of-type {
                display: none;
            }
        }
    }

    &__header {
        background: #{map.get(variables.$drawer, "header", "background")} map.get(variables.$drawer, "header", "image");
        color: map.get(variables.$drawer, "header", "color");
        display: flex;
        align-items: center;
        min-height: map.get(variables.$drawer, "header", "height");
        padding: map.get(variables.$drawer, "header", "padding");

        #{$self}--compact & {
            background-position: center;
            background-size: auto 65%;
            min-height: map.get(variables.$drawer, "compact", "header", "height");
            padding: map.get(variables.$drawer, "compact", "header", "padding");
            align-items: center;
        }
    }

    &__content {
        max-height: calc(100vh - #{map.get(variables.$drawer, "header", "height")});
        height: 100%;
        overflow-y: auto;
        display: flex;
        flex-wrap: wrap;
        align-items: flex-start;
        justify-content: flex-start;
        scrollbar-width: thin;
        scrollbar-color: map.get(variables.$drawer, "background") map.get(variables.$drawer, "background");

        &::-webkit-scrollbar {
            width: 1rem;
        }

        &::-webkit-scrollbar-track {
            background: map.get(variables.$drawer, "background");
        }

        &:hover {
            scrollbar-color: darken(map.get(variables.$drawer, "background"), 20%) map.get(variables.$drawer, "background");

            &::-webkit-scrollbar-thumb {
                background: darken(map.get(variables.$drawer, "background"), 20%);
            }
        }

        .drawer--compact & {
            max-height: calc(100vh - #{map.get(variables.$drawer, "compact", "header", "height")});
        }
    }

    .list {
        background: transparent;
        padding: 0;
        width: 100%;

        &--bottom {
            align-self: flex-end;
        }

        &__item {
            color: inherit;
            font-size: map.get(variables.$drawer, "list", "font-size");
            font-weight: 500;
        }

        &__item-graphic, &__item-meta {
            color: darken(map.get(variables.$drawer, "color"), 10%);
        }

        &__item-secondary-text {
            color: inherit;
        }
    }
}

.persistent--open, .permanent--open {
    overflow-x: hidden;

    .main {
        margin-left: map.get(variables.$drawer, "width");

        .app-bar {
            left: map.get(variables.$drawer, "width");
            padding-left: 1.2rem;
        }
    }

    .drawer--compact + .main {
        margin-left: map.get(variables.$drawer, "compact", "width");

        .app-bar {
            left: map.get(variables.$drawer, "compact", "width");
        }
    }

    .drawer__nav-toggle {
        transform: translateX(0);
    }
}

.permanent--open .drawer__nav-toggle {
    display: none;
}