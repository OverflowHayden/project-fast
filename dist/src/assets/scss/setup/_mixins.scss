@use 'sass:map';
@use 'sass:meta';
@use 'variables';
@use '../vendor/bourbon' as *;
@use '../vendor/neat' as *;

@mixin twelve-columns($grid, $screen) {
    @for $i from 1 through 12 {
        &--#{$i} {
            @include grid-column(12, $grid);

            @media (min-width: $screen) {
                @include grid-column($i, $grid);
            }
        }
    }
}

@mixin twelve-push($grid, $screen) {
    @for $i from 1 through 12 {
        &--#{$i} {
            @media (min-width: $screen) {
                @include grid-push($i, $grid);
            }
        }
    }
}

@mixin twelve-shift($grid, $screen) {
    @for $i from 1 through 12 {
        &--#{$i} {
            @media (min-width: $screen) {
                @include grid-shift($i, $grid);
            }
        }
    }
}


@mixin ripple() {
    position: relative;
    overflow: hidden;

    &:active, &:focus {
        outline: none;
    }

    &:after {
        content: "";
        display: block;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        pointer-events: none;
        background-image: radial-gradient(circle, variables.$color-base-black 10%, transparent 10.01%);
        background-repeat: no-repeat;
        background-position: 50%;
        transform: scale(10, 10);
        opacity: 0;
        transition: transform .5s, opacity 1s;
        background-color: variables.$color-base-white;
    }

    &:active:after {
        transform: scale(0, 0);
        opacity: .2;
        transition: 0s;
    }
}

@mixin text-field() {
    $self: &;
    font-size: 1.6rem;
    line-height: 1.4;
    position: relative;
    width: 30rem;
    max-width: 100%;
    padding-top: 1em;
    margin-bottom: 1.5rem;

    &__label {
        color: variables.$color-text-field-label;
        line-height: 1;
        margin: 0;
        cursor: text;
        top: 0;
        left: 0;
        position: absolute;
        transform: translate(0, 1.5em) scale(1);
        transform-origin: top left;
        transition: transform .2s cubic-bezier(0, 0, .2, 1) 0s;
    }

    &__input {
        display: block;
        background: transparent;
        border: none;
        border-bottom: 1px solid variables.$color-text-field-inactive;
        border-radius: 0;
        width: 100%;
        height: 2em;
        margin: 0;
        padding: 0;
        transition: border .2s ease, box-shadow .2s ease;

        &::placeholder {
            color: transparent;
            transition: color .2s ease;
            user-select: none;
        }

        &:-ms-input-placeholder {
            color: transparent;
            transition: color .2s ease;
            user-select: none;
        }

        &::-webkit-input-placeholder {
            color: transparent;
            transition: color .2s ease;
            user-select: none;
        }

        &:hover {
            border-bottom: .1rem solid variables.$color-text-field-inactive;
            box-shadow: inset 0 -.1rem 0 0 variables.$color-text-field-inactive;
        }

        &:focus {
            border-bottom: .1rem solid variables.$color-text-field-active;
            box-shadow: inset 0 -.1rem 0 0 variables.$color-text-field-active;
            outline: none;

            &::placeholder {
                color: variables.$color-text-field-inactive;
            }

            &:-ms-input-placeholder {
                color: variables.$color-text-field-inactive;
            }

            &::-webkit-input-placeholder {
                color: variables.$color-text-field-inactive;
            }

            + #{$self}__label {
                transform: translate(0, 0) scale(.75);
            }
        }

        &:not(:placeholder-shown) + #{$self}__label, &:-webkit-autofill + #{$self}__label {
            transform: translate(0, 0) scale(.75);
        }

        &.placeholder-hidden + #{$self}__label {
            transform: translate(0, 0) scale(.75);
        }
    }
}

@mixin button() {
    @include ripple;

    background: map.get(variables.$button, "background");
    border: .2rem solid transparent;
    border-radius: map.get(variables.$button, "border-radius");
    box-shadow: 0 .2rem .5rem 0 rgba(variables.$color-base-black, .26);
    color: map.get(variables.$button, "color");
    display: inline-block;
    font-size: map.get(variables.$button, "font-size");
    font-weight: 500;
    line-height: 1;
    letter-spacing: .075em;
    padding: map.get(variables.$button, "padding");
    cursor: pointer;
    position: relative;
    overflow: hidden;
    transform: translate3d(0, 0, 0);
    transition: background 0.2s ease;
    text-transform: uppercase;
    vertical-align: middle;

    .fa, .mdi, .iconify {
        margin-left: -.4rem;
        margin-right: 1.4rem;
    }

    &:hover {
        background: darken(map.get(variables.$button, "background"), 4%);
        color: map.get(variables.$button, "color");
    }
}

@mixin button--alt() {
    background: none;
    border: .2rem solid map.get(variables.$button, "background");
    box-shadow: none;
    color: map.get(variables.$button, "background");

    &:hover {
        background: darken(variables.$color-base-white, 4%);
        color: map.get(variables.$button, "background");
    }
}

@mixin button--text() {
    background: none;
    border: .2rem solid transparent;
    box-shadow: none;
    color: map.get(variables.$button, "background");

    &:hover {
        background: darken(variables.$color-base-white, 4%);
        color: map.get(variables.$button, "background");
    }
}

@mixin button--compact() {
    padding: map.get(variables.$button, "compact", "padding");
    font-size: map.get(variables.$button, "compact", "font-size");
    line-height: 1.4;
}

@mixin button--icon() {
    padding: .8rem;

    .fa, .mdi, .iconify {
        margin: 0;
    }
}

@mixin scrollbar($color) {
    scrollbar-width: thin;
    scrollbar-color: $color $color;

    &::-webkit-scrollbar {
        width: 1rem;
    }

    &::-webkit-scrollbar-track {
        background: $color;
    }

    &:hover {
        scrollbar-color: darken($color, 20%) $color;

        &::-webkit-scrollbar-thumb {
            background: darken($color, 20%);
        }
    }
}